
var https = require('https')

exports.handler = (event, context) => {

try {

if (event.session.new) {
  // New Session
  console.log("NEW SESSION")
}

switch (event.request.type) {

  case "LaunchRequest":
    // Launch Request
    console.log(`LAUNCH REQUEST`)
    context.succeed (generateResponse(buildSpeechletResponse("Okay. Let's try and figure out what's going on. I'm going to go through some popular symptoms, and you can answer yes if you have that symptom, or no if you don't. Are you experiencing any chills?", false),{}))
    break;
    
  case "IntentRequest":
    // Intent Request
    console.log(`INTENT REQUEST`)
    if(event.request.intent.name==="yes") {
    //Yes to chills
        context.succeed(generateResponse(buildSpeechletResponse("Do you have nausea", false),{}))
            if(event.request.intent.name==="yes") {
                context.succeed(generateResponse(buildSpeechletResponse("You have nausea", false),{}))
            }
            else {
                context.succeed(generateResponse(buildSpeechletResponse("You do not have nausea", false),{}))
            }
        
    }
    else {
    //No to chills
        context.succeed(generateResponse(buildSpeechletResponse("So you don't have the chills.", false),{}))
        }
    break;


  case "SessionEndedRequest":
    // Session Ended Request
    console.log(`SESSION ENDED REQUEST`)
    break;

  default:
    context.fail(`INVALID REQUEST TYPE: ${event.request.type}`)

}

} catch(error) { context.fail(`Exception: ${error}`) }

}

// Helpers
buildSpeechletResponse = (outputText, shouldEndSession) => {

return {
outputSpeech: {
  type: "PlainText",
  text: outputText
},
shouldEndSession: shouldEndSession
}

}

generateResponse = (speechletResponse, sessionAttributes) => {

return {
version: "1.0",
sessionAttributes: sessionAttributes,
response: speechletResponse
}

}
